<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
  <mapper namespace="global.sesoc.TOPproject.DAO.UserMapperInterface">
  
  
  
  <!-- ~~~~~~~~~~~~~~~~~~~~ U P D A T E ~~~~~~~~~~~~~~~~~~~~ -->
  
  <update id="updateUser_p_num_list" parameterType="User">
	UPDATE
		TOP_USER
	SET
		P_NUM_LIST = #{p_num_list}
	WHERE
	    ID = #{id}
  </update>
  
  
  <update id="updateUser" parameterType="User">
  	UPDATE top_user
  	SET pw = #{pw}, email = #{email}, name = #{name}
  		<if test="nickname != null"> ,nickname = #{nickname} </if>
	  	<if test="company != null"> ,company = #{company} </if>
  	WHERE id = #{id}
  </update>
  
    
  <update id="updateFriendList" parameterType="map">
  	UPDATE friend_list
  	SET fl = #{fl}
  	WHERE id = #{id}
  </update>
  
  
  <update id="updateUserMemo" parameterType="Memo">
  	UPDATE memo
  	SET n_content = #{n_content}
  	WHERE id = #{id}
  </update>
  
  
  <update id="updateReq" parameterType="Map">
  	UPDATE friend_request
  	SET check_req = #{check_req}
  	WHERE receiver = #{receiver} AND requester = #{requester}
  </update>
  
  
  
  <!-- ~~~~~~~~~~~~~~~~~~~~ S E L E C T ~~~~~~~~~~~~~~~~~~~~ -->
  
  <select id="searchUser" parameterType="String" resultType="User">
  	SELECT id, pw, email, name, nickname, company, p_num_list
  	FROM top_user
  	WHERE id = #{id}
  </select>
  
  
  <select id="searchUserFL" parameterType="String" resultType="String"> 
  	SELECT fl 
  	FROM friend_list 
  	WHERE id = #{id} 
  </select>
  
  
  <select id="searchUserList" parameterType="String" resultType="User">
  	SELECT id, name, nickname
  	FROM top_user
  	WHERE id LIKE '%'||#{id}||'%' 
  </select>
  
  
  <select id="searchReqList" parameterType="Map" resultType="Map">
  	SELECT requester, receiver, check_req
  	FROM friend_request
  	WHERE 
  		<if test="who.equals('requester')"> check_req = '0' AND requester = #{myId}  
  			ORDER BY requester </if> 
  		<if test="who.equals('receiver')"> check_req = '0' AND receiver = #{myId} 
  			ORDER BY receiver </if>
  </select> 
  
  
  <select id="searchUserFilelist" parameterType="String" resultType="Context">
  	SELECT id, c_num, title, context, TO_CHAR(indate, 'YYYY/MM/DD') indate
  	FROM context_user
  	WHERE id = #{id}
  </select>
  
  
  <select id="searchContext" parameterType="int" resultType="Context">
  	SELECT id, c_num, title, context, TO_CHAR(indate, 'YYYY/MM/DD') indate
  	FROM context_user
  	WHERE c_num = #{c_num}
  </select>
  
  
  
  <!-- ~~~~~~~~~~~~~~~~~~~~ I N S E R T ~~~~~~~~~~~~~~~~~~~~ -->

  <insert id="insertUser" parameterType="User">
	  INSERT INTO top_user(
	  	id, pw, email, name, nickname
	  		<if test="company != null"> ,company </if> 
	  )VALUES(
	  	#{id}, #{pw}, #{email}, #{name}
	  		<if test="nickname != null"> ,#{nickname} </if>
	  		<if test="company != null"> ,#{company} </if>
	  )
  </insert>
  
  
  <insert id="insertFriendList" parameterType="map">
  	INSERT INTO friend_list(
  		id, fl
  	)VALUES(
  		#{id}, #{fl}
  	)
  </insert>
  
  
  <insert id="insertUserMemo" parameterType="Memo">
  	INSERT INTO memo(
  		id, n_content
  	)VALUES(
  		#{id}, #{n_content}
  	)
  </insert>
  
  
 <insert id="insertReq" parameterType="Map">
  	INSERT INTO friend_request(
  		requester, receiver
  	)VALUES(
  		#{requester}, #{receiver}
  	)
  </insert>
  
  
  <insert id="insertContext" parameterType="Context">
  	INSERT INTO context_user(
  		id, c_num, title, context
  	)VALUES(
  		#{id}, c_num_user_seq.NEXTVAL, #{title}, #{context}
  	)
  </insert>
  
  
  
  <!-- ~~~~~~~~~~~~~~~~~~~~ D E L E T E ~~~~~~~~~~~~~~~~~~~~ -->
  
  <update id="deleteUserMemo" parameterType="Memo">
  	UPDATE memo
  	SET n_deldate = SYSDATE
  	WHERE id = #{id}
  </update>
  
  
  <delete id="deleteReq" parameterType="Map">
  	DELETE FROM friend_request 
  	WHERE requester = #{requester} AND receiver = #{receiver}
  </delete>
  
  
  
  
  </mapper>